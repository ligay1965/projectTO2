import React, { useState } from 'react';
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from './ui/dialog';
import { Button } from './ui/button';
import { Input } from './ui/input';
import { Label } from './ui/label';
import { Textarea } from './ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';
import { toast } from 'sonner@2.0.3';

interface OrderServiceModalProps {
  children: React.ReactNode;
}

const serviceTypes = [
  '–¢–µ—Ö–æ–≥–ª—è–¥ –ª–µ–≥–∫–æ–≤–∏—Ö –∞–≤—Ç–æ',
  '–¢–µ—Ö–æ–≥–ª—è–¥ –≤–∞–Ω—Ç–∞–∂–Ω–∏—Ö –∞–≤—Ç–æ',
  '–¢–µ—Ö–æ–≥–ª—è–¥ –∞–≤—Ç–æ–±—É—Å—ñ–≤',
  '–¢–µ—Ö–æ–≥–ª—è–¥ –ø—Ä–∏—á–µ–ø—ñ–≤',
  '–°—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∏—Ö –∑–∞—Å–æ–±—ñ–≤',
  '–ö–∞–ª—ñ–±—Ä–æ–≤–∫–∞ —Ç–∞—Ö–æ–≥—Ä–∞—Ñ—ñ–≤',
  '–ú–°–¢–û (–ú—ñ–∂–Ω–∞—Ä–æ–¥–Ω–∞ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è —Ç–µ—Ö–Ω—ñ—á–Ω–æ–≥–æ –æ–≥–ª—è–¥—É)',
  '–Ñ–ö–ú–¢ (–Ñ–≤—Ä–æ–ø–µ–π—Å—å–∫–∞ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü—ñ—è –º—ñ–Ω—ñ—Å—Ç—Ä—ñ–≤ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É)',
  '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è',
  '–Ü–Ω—à–µ'
];

export function OrderServiceModal({ children }: OrderServiceModalProps) {
  const [isOpen, setIsOpen] = useState(false);
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    email: '',
    serviceType: '',
    vehicleInfo: '',
    message: ''
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è
    if (!formData.name || !formData.phone || !formData.serviceType) {
      toast.error('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è');
      return;
    }

    // –°–∏–º—É–ª—è—Ü—ñ—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º–∏
    console.log('–§–æ—Ä–º–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞:', formData);
    
    toast.success('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∞! –ú–∏ –∑–≤\'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.');
    
    // –û—á–∏—â–µ–Ω–Ω—è —Ñ–æ—Ä–º–∏ —Ç–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
    setFormData({
      name: '',
      phone: '',
      email: '',
      serviceType: '',
      vehicleInfo: '',
      message: ''
    });
    setIsOpen(false);
  };

  const handleInputChange = (field: string, value: string) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const isWorkingHours = () => {
    const now = new Date();
    const day = now.getDay(); // 0 = –Ω–µ–¥—ñ–ª—è, 1 = –ø–æ–Ω–µ–¥—ñ–ª–æ–∫, ..., 6 = —Å—É–±–æ—Ç–∞
    const hour = now.getHours();
    
    // –ü–æ–Ω–µ–¥—ñ–ª–æ–∫-–ü'—è—Ç–Ω–∏—Ü—è: 9:00-18:00
    if (day >= 1 && day <= 5) {
      return hour >= 9 && hour < 18;
    }
    // –°—É–±–æ—Ç–∞: 9:00-15:00 (–∑–∞ –∑–∞–ø–∏—Å–æ–º)
    if (day === 6) {
      return hour >= 9 && hour < 15;
    }
    // –ù–µ–¥—ñ–ª—è: –≤–∏—Ö—ñ–¥–Ω–∏–π
    return false;
  };

  const handleCall = () => {
    if (isWorkingHours()) {
      window.open('tel:+380935759022', '_self');
    } else {
      toast.error('–ó–∞—Ä–∞–∑ –ø–æ–∑–∞ —Ä–æ–±–æ—á–∏–º —á–∞—Å–æ–º. –ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏: –ü–Ω-–ü—Ç 9:00-18:00, –°–± 9:00-15:00');
    }
  };

  return (
    <Dialog open={isOpen} onOpenChange={setIsOpen}>
      <DialogTrigger asChild>
        {children}
      </DialogTrigger>
      <DialogContent className="sm:max-w-[500px] bg-white max-h-[90vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle className="text-[#111111]">
            –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø–æ—Å–ª—É–≥–∏
          </DialogTitle>
          <DialogDescription className="text-[#111111]/70 text-sm">
            –ó–∞–ø–æ–≤–Ω—ñ—Ç—å —Ñ–æ—Ä–º—É —ñ –º–∏ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π
          </DialogDescription>
        </DialogHeader>
        
        <form onSubmit={handleSubmit} className="space-y-4 mt-4">
          <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
            <div className="space-y-1.5">
              <Label htmlFor="name" className="text-[#111111]">
                –Ü–º'—è *
              </Label>
              <Input
                id="name"
                placeholder="–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è"
                value={formData.name}
                onChange={(e) => handleInputChange('name', e.target.value)}
                className="border-gray-300 focus:border-[#FFD400] focus:ring-[#FFD400]"
                required
              />
            </div>
            
            <div className="space-y-1.5">
              <Label htmlFor="phone" className="text-[#111111]">
                –¢–µ–ª–µ—Ñ–æ–Ω *
              </Label>
              <Input
                id="phone"
                placeholder="+380 (67) 123-45-67"
                value={formData.phone}
                onChange={(e) => handleInputChange('phone', e.target.value)}
                className="border-gray-300 focus:border-[#FFD400] focus:ring-[#FFD400]"
                required
              />
            </div>
          </div>
          
          <div className="space-y-1.5">
            <Label htmlFor="email" className="text-[#111111]">
              Email
            </Label>
            <Input
              id="email"
              type="email"
              placeholder="your@email.com"
              value={formData.email}
              onChange={(e) => handleInputChange('email', e.target.value)}
              className="border-gray-300 focus:border-[#FFD400] focus:ring-[#FFD400]"
            />
          </div>
          
          <div className="space-y-1.5">
            <Label htmlFor="serviceType" className="text-[#111111]">
              –¢–∏–ø –ø–æ—Å–ª—É–≥–∏ *
            </Label>
            <Select value={formData.serviceType} onValueChange={(value) => handleInputChange('serviceType', value)}>
              <SelectTrigger className="border-gray-300 focus:border-[#FFD400] focus:ring-[#FFD400]">
                <SelectValue placeholder="–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –ø–æ—Å–ª—É–≥–∏" />
              </SelectTrigger>
              <SelectContent>
                {serviceTypes.map((service) => (
                  <SelectItem key={service} value={service}>
                    {service}
                  </SelectItem>
                ))}
              </SelectContent>
            </Select>
          </div>
          
          <div className="space-y-1.5">
            <Label htmlFor="vehicleInfo" className="text-[#111111]">
              –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –¢–ó
            </Label>
            <Input
              id="vehicleInfo"
              placeholder="–ú–∞—Ä–∫–∞, –º–æ–¥–µ–ª—å, —Ä—ñ–∫"
              value={formData.vehicleInfo}
              onChange={(e) => handleInputChange('vehicleInfo', e.target.value)}
              className="border-gray-300 focus:border-[#FFD400] focus:ring-[#FFD400]"
            />
          </div>
          
          <div className="space-y-1.5">
            <Label htmlFor="message" className="text-[#111111]">
              –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
            </Label>
            <Textarea
              id="message"
              placeholder="–ü–æ–±–∞–∂–∞–Ω–Ω—è —â–æ–¥–æ —á–∞—Å—É –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è"
              value={formData.message}
              onChange={(e) => handleInputChange('message', e.target.value)}
              className="border-gray-300 focus:border-[#FFD400] focus:ring-[#FFD400] resize-none"
              rows={2}
            />
          </div>
          
          <div className="flex flex-col sm:flex-row gap-2 pt-3">
            <Button
              type="submit"
              className="bg-[#FFD400] text-[#111111] hover:bg-[#FFD400]/90 rounded-full px-6 font-semibold transition-all flex-1"
            >
              –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏
            </Button>
            <Button
              type="button"
              variant="outline"
              onClick={handleCall}
              className="border-[#FFD400] text-[#FFD400] hover:bg-[#FFD400] hover:text-[#111111] rounded-full px-6 font-semibold transition-all"
            >
              üìû –í–∏–∫–ª–∏–∫
            </Button>
            <Button
              type="button"
              variant="outline"
              onClick={() => setIsOpen(false)}
              className="border-[#111111] text-[#111111] hover:bg-[#111111] hover:text-white rounded-full px-6 font-semibold transition-all"
            >
              –°–∫–∞—Å—É–≤–∞—Ç–∏
            </Button>
          </div>
        </form>
      </DialogContent>
    </Dialog>
  );
}